/* This file was generated by SableCC (http://www.sablecc.org/). */

package card.node;

import card.analysis.*;

@SuppressWarnings("nls")
public final class AFuncStmt extends PFuncStmt
{
    private PFuncKeyword _funcKeyword_;
    private TOpLeftSm _opLeftSm_;
    private PFuncPara _funcPara_;
    private TOpRightSm _opRightSm_;
    private TOpSemi _opSemi_;

    public AFuncStmt()
    {
        // Constructor
    }

    public AFuncStmt(
        @SuppressWarnings("hiding") PFuncKeyword _funcKeyword_,
        @SuppressWarnings("hiding") TOpLeftSm _opLeftSm_,
        @SuppressWarnings("hiding") PFuncPara _funcPara_,
        @SuppressWarnings("hiding") TOpRightSm _opRightSm_,
        @SuppressWarnings("hiding") TOpSemi _opSemi_)
    {
        // Constructor
        setFuncKeyword(_funcKeyword_);

        setOpLeftSm(_opLeftSm_);

        setFuncPara(_funcPara_);

        setOpRightSm(_opRightSm_);

        setOpSemi(_opSemi_);

    }

    @Override
    public Object clone()
    {
        return new AFuncStmt(
            cloneNode(this._funcKeyword_),
            cloneNode(this._opLeftSm_),
            cloneNode(this._funcPara_),
            cloneNode(this._opRightSm_),
            cloneNode(this._opSemi_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAFuncStmt(this);
    }

    public PFuncKeyword getFuncKeyword()
    {
        return this._funcKeyword_;
    }

    public void setFuncKeyword(PFuncKeyword node)
    {
        if(this._funcKeyword_ != null)
        {
            this._funcKeyword_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._funcKeyword_ = node;
    }

    public TOpLeftSm getOpLeftSm()
    {
        return this._opLeftSm_;
    }

    public void setOpLeftSm(TOpLeftSm node)
    {
        if(this._opLeftSm_ != null)
        {
            this._opLeftSm_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._opLeftSm_ = node;
    }

    public PFuncPara getFuncPara()
    {
        return this._funcPara_;
    }

    public void setFuncPara(PFuncPara node)
    {
        if(this._funcPara_ != null)
        {
            this._funcPara_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._funcPara_ = node;
    }

    public TOpRightSm getOpRightSm()
    {
        return this._opRightSm_;
    }

    public void setOpRightSm(TOpRightSm node)
    {
        if(this._opRightSm_ != null)
        {
            this._opRightSm_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._opRightSm_ = node;
    }

    public TOpSemi getOpSemi()
    {
        return this._opSemi_;
    }

    public void setOpSemi(TOpSemi node)
    {
        if(this._opSemi_ != null)
        {
            this._opSemi_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._opSemi_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._funcKeyword_)
            + toString(this._opLeftSm_)
            + toString(this._funcPara_)
            + toString(this._opRightSm_)
            + toString(this._opSemi_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._funcKeyword_ == child)
        {
            this._funcKeyword_ = null;
            return;
        }

        if(this._opLeftSm_ == child)
        {
            this._opLeftSm_ = null;
            return;
        }

        if(this._funcPara_ == child)
        {
            this._funcPara_ = null;
            return;
        }

        if(this._opRightSm_ == child)
        {
            this._opRightSm_ = null;
            return;
        }

        if(this._opSemi_ == child)
        {
            this._opSemi_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._funcKeyword_ == oldChild)
        {
            setFuncKeyword((PFuncKeyword) newChild);
            return;
        }

        if(this._opLeftSm_ == oldChild)
        {
            setOpLeftSm((TOpLeftSm) newChild);
            return;
        }

        if(this._funcPara_ == oldChild)
        {
            setFuncPara((PFuncPara) newChild);
            return;
        }

        if(this._opRightSm_ == oldChild)
        {
            setOpRightSm((TOpRightSm) newChild);
            return;
        }

        if(this._opSemi_ == oldChild)
        {
            setOpSemi((TOpSemi) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
