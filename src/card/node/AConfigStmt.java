/* This file was generated by SableCC (http://www.sablecc.org/). */

package card.node;

import card.analysis.*;

@SuppressWarnings("nls")
public final class AConfigStmt extends PConfigStmt
{
    private PConfigKeyword _configKeyword_;
    private TOpColon _opColon_;
    private PConfigValue _configValue_;
    private TOpSemi _opSemi_;

    public AConfigStmt()
    {
        // Constructor
    }

    public AConfigStmt(
        @SuppressWarnings("hiding") PConfigKeyword _configKeyword_,
        @SuppressWarnings("hiding") TOpColon _opColon_,
        @SuppressWarnings("hiding") PConfigValue _configValue_,
        @SuppressWarnings("hiding") TOpSemi _opSemi_)
    {
        // Constructor
        setConfigKeyword(_configKeyword_);

        setOpColon(_opColon_);

        setConfigValue(_configValue_);

        setOpSemi(_opSemi_);

    }

    @Override
    public Object clone()
    {
        return new AConfigStmt(
            cloneNode(this._configKeyword_),
            cloneNode(this._opColon_),
            cloneNode(this._configValue_),
            cloneNode(this._opSemi_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAConfigStmt(this);
    }

    public PConfigKeyword getConfigKeyword()
    {
        return this._configKeyword_;
    }

    public void setConfigKeyword(PConfigKeyword node)
    {
        if(this._configKeyword_ != null)
        {
            this._configKeyword_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._configKeyword_ = node;
    }

    public TOpColon getOpColon()
    {
        return this._opColon_;
    }

    public void setOpColon(TOpColon node)
    {
        if(this._opColon_ != null)
        {
            this._opColon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._opColon_ = node;
    }

    public PConfigValue getConfigValue()
    {
        return this._configValue_;
    }

    public void setConfigValue(PConfigValue node)
    {
        if(this._configValue_ != null)
        {
            this._configValue_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._configValue_ = node;
    }

    public TOpSemi getOpSemi()
    {
        return this._opSemi_;
    }

    public void setOpSemi(TOpSemi node)
    {
        if(this._opSemi_ != null)
        {
            this._opSemi_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._opSemi_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._configKeyword_)
            + toString(this._opColon_)
            + toString(this._configValue_)
            + toString(this._opSemi_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._configKeyword_ == child)
        {
            this._configKeyword_ = null;
            return;
        }

        if(this._opColon_ == child)
        {
            this._opColon_ = null;
            return;
        }

        if(this._configValue_ == child)
        {
            this._configValue_ = null;
            return;
        }

        if(this._opSemi_ == child)
        {
            this._opSemi_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._configKeyword_ == oldChild)
        {
            setConfigKeyword((PConfigKeyword) newChild);
            return;
        }

        if(this._opColon_ == oldChild)
        {
            setOpColon((TOpColon) newChild);
            return;
        }

        if(this._configValue_ == oldChild)
        {
            setConfigValue((PConfigValue) newChild);
            return;
        }

        if(this._opSemi_ == oldChild)
        {
            setOpSemi((TOpSemi) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
