/* This file was generated by SableCC (http://www.sablecc.org/). */

package card.analysis;

import card.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAProgram(AProgram node);
    void caseAClassDefine(AClassDefine node);
    void caseAClassName(AClassName node);
    void caseAAddPattern(AAddPattern node);
    void caseAPatternDeclare(APatternDeclare node);
    void caseAPatternDeclareCombine(APatternDeclareCombine node);
    void caseAPatternDeclareCompare(APatternDeclareCompare node);
    void caseAPatternDeclareOver(APatternDeclareOver node);
    void caseAPatternKeyCombine(APatternKeyCombine node);
    void caseAEmptyPatternKeyCombineRest(AEmptyPatternKeyCombineRest node);
    void caseANonEmptyPatternKeyCombineRest(ANonEmptyPatternKeyCombineRest node);
    void caseAPatternKey(APatternKey node);
    void caseASamePatternKeyword(ASamePatternKeyword node);
    void caseAStraightPatternKeyword(AStraightPatternKeyword node);
    void caseAFlushPatternKeyword(AFlushPatternKeyword node);
    void caseASingleRange(ASingleRange node);
    void caseAMultiRange(AMultiRange node);
    void caseARangeRest(ARangeRest node);
    void caseAPatternCompare(APatternCompare node);
    void caseAEmptyCompareRest(AEmptyCompareRest node);
    void caseAMultiCompareRest(AMultiCompareRest node);
    void caseABigCompareRule(ABigCompareRule node);
    void caseASmallCompareRule(ASmallCompareRule node);
    void caseAEqualCompareRule(AEqualCompareRule node);
    void caseASuitCompareRule(ASuitCompareRule node);
    void caseAEmptyPatternOverRule(AEmptyPatternOverRule node);
    void caseARestPatternOverRule(ARestPatternOverRule node);
    void caseAEmptyPatternOverRest(AEmptyPatternOverRest node);
    void caseARestPatternOverRest(ARestPatternOverRest node);
    void caseAPattern(APattern node);
    void caseAConfig(AConfig node);
    void caseAConfigStmt(AConfigStmt node);
    void caseAWinConfigKeyword(AWinConfigKeyword node);
    void caseASystempairConfigKeyword(ASystempairConfigKeyword node);
    void caseASelfreplaceConfigKeyword(ASelfreplaceConfigKeyword node);
    void caseANextConfigKeyword(ANextConfigKeyword node);
    void caseADefaultstatusConfigKeyword(ADefaultstatusConfigKeyword node);
    void caseARankConfigKeyword(ARankConfigKeyword node);
    void caseAWinValueConfigValue(AWinValueConfigValue node);
    void caseABooleanConfigValue(ABooleanConfigValue node);
    void caseANumberConfigValue(ANumberConfigValue node);
    void caseARankNameConfigValue(ARankNameConfigValue node);
    void caseAWinValue(AWinValue node);
    void caseATrueBoolean(ATrueBoolean node);
    void caseAFalseBoolean(AFalseBoolean node);
    void caseARankName(ARankName node);
    void caseABeforeValidStmt(ABeforeValidStmt node);
    void caseAAfterValidStmt(AAfterValidStmt node);
    void caseAEmptyBeforStmt(AEmptyBeforStmt node);
    void caseABeforeBeforStmt(ABeforeBeforStmt node);
    void caseAEmptyAfterStmt(AEmptyAfterStmt node);
    void caseAAfterAfterStmt(AAfterAfterStmt node);
    void caseAInitCard(AInitCard node);
    void caseAInitPlayer(AInitPlayer node);
    void caseAInitCardStmt(AInitCardStmt node);
    void caseAEmptyInitStmtRest(AEmptyInitStmtRest node);
    void caseARestInitStmtRest(ARestInitStmtRest node);
    void caseAInitStmt(AInitStmt node);
    void caseAFuncStmt(AFuncStmt node);
    void caseADrawtoFuncKeyword(ADrawtoFuncKeyword node);
    void caseADrawtoallFuncKeyword(ADrawtoallFuncKeyword node);
    void caseASetcurplayeridFuncKeyword(ASetcurplayeridFuncKeyword node);
    void caseASetdisplaysizeFuncKeyword(ASetdisplaysizeFuncKeyword node);
    void caseAEmptyFuncPara(AEmptyFuncPara node);
    void caseANoEmptyFuncPara(ANoEmptyFuncPara node);
    void caseAEmptyFuncParaRest(AEmptyFuncParaRest node);
    void caseANoEmptyFuncParaRest(ANoEmptyFuncParaRest node);
    void caseANumberPara(ANumberPara node);
    void caseAIdPara(AIdPara node);
    void caseAGetStatus(AGetStatus node);
    void caseAIsValidCombination(AIsValidCombination node);
    void caseACardSelected(ACardSelected node);
    void caseAIsWinnerFound(AIsWinnerFound node);
    void caseANextTurn(ANextTurn node);

    void caseTKeywordClass(TKeywordClass node);
    void caseTKeywordAddpattern(TKeywordAddpattern node);
    void caseTKeywordSame(TKeywordSame node);
    void caseTKeywordStraight(TKeywordStraight node);
    void caseTKeywordFlush(TKeywordFlush node);
    void caseTKeywordConfig(TKeywordConfig node);
    void caseTKeywordWin(TKeywordWin node);
    void caseTKeywordSystem(TKeywordSystem node);
    void caseTKeywordSelfreplace(TKeywordSelfreplace node);
    void caseTKeywordNext(TKeywordNext node);
    void caseTKeywordDefaultstatus(TKeywordDefaultstatus node);
    void caseTKeywordRank(TKeywordRank node);
    void caseTKeywordInitcard(TKeywordInitcard node);
    void caseTKeywordGetstatus(TKeywordGetstatus node);
    void caseTKeywordIsvalidcombination(TKeywordIsvalidcombination node);
    void caseTKeywordIswinnerfound(TKeywordIswinnerfound node);
    void caseTKeywordNextturn(TKeywordNextturn node);
    void caseTKeywordBefore(TKeywordBefore node);
    void caseTKerwordAfter(TKerwordAfter node);
    void caseTFuncDrawto(TFuncDrawto node);
    void caseTFuncDrawtoall(TFuncDrawtoall node);
    void caseTFuncSetcurplayerid(TFuncSetcurplayerid node);
    void caseTFuncSetdisplaysize(TFuncSetdisplaysize node);
    void caseTNumber(TNumber node);
    void caseTIdentifier(TIdentifier node);
    void caseTOpSemi(TOpSemi node);
    void caseTOpComma(TOpComma node);
    void caseTOpColon(TOpColon node);
    void caseTOpPlus(TOpPlus node);
    void caseTOpMinus(TOpMinus node);
    void caseTOpEqual(TOpEqual node);
    void caseTOpSuit(TOpSuit node);
    void caseTOpLeftSm(TOpLeftSm node);
    void caseTOpRightSm(TOpRightSm node);
    void caseTOpLeftMi(TOpLeftMi node);
    void caseTOpRightMi(TOpRightMi node);
    void caseTOpLeftLg(TOpLeftLg node);
    void caseTOpRightLg(TOpRightLg node);
    void caseTBlank(TBlank node);
    void caseTStringLiteral(TStringLiteral node);
    void caseTJavaLiteral(TJavaLiteral node);
    void caseEOF(EOF node);
}
